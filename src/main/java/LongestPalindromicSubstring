class Solution {
    public String longestPalindrome(String str) {
        
        int n = str.length();
        if(n==0)
            return "";
        
        int maxLength = 1;
 
        int start = 0;
        int low, high;
 
        for (int i = 1; i < n; i++) {
            
            low = i - 1;
            high = i;
            while (low >= 0 && high < n && str.charAt(low) == str.charAt(high)) {
                if (high - low + 1 > maxLength) {
                    start = low;
                    maxLength = high - low + 1;
                }
                low--;
                high++;
            }
 
            low = i - 1;
            high = i + 1;
            while (low >= 0 && high < n && str.charAt(low) == str.charAt(high)) {
                if (high - low + 1 > maxLength) {
                    start = low;
                    maxLength = high - low + 1;
                }
                low--;
                high++;
            }
        }
        return str.substring(start,start+maxLength);
    }
}
